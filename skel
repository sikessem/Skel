#!/usr/bin/php --
<?php

require_once __DIR__ . '/cfg/_init.php';

if(!isset($argv[1])) {
  while('\q' !== ($line = readline('>')))
    parse_line($line);
} else {
  $input = $argv[1] ?? '';
  while(!is_readable($file = SRC_DIR . $input . SRC_EXT))
    $input = readline('Enter an existing file in the source directory : ');
  parse_file($file);
}

function parse_line(string $line) {
  $chars = str_split($line);
  $piece = '';
  foreach($chars as $char)
    parse_piece($char, $piece);
}

function parse_file(string $file) {
  $fh = @fopen($file, 'r');
  $piece = '';
  while(!feof($fh))
    parse_piece(fgetc($fh), $piece);
  fclose($fh);
}

function parse_piece(string $char, string &$piece) {
  if(is_space($char)) {
    if($piece === '') return;
    is_valid($piece)?
    token($piece):
    error($piece);
    $piece = '';
    return;
  } $piece .= $char;
}

function is_valid(string $piece): bool {
  $is_valid = false;
  if(in_array($piece, KEYWORDS)) $is_valid = true;
  else foreach(PATTERNS as $name => $pattern) {
    if(preg_match("/^$pattern$/", $piece)) {
      $is_valid = true;
      break;
    }
  } return $is_valid;
}

function is_space(string $char): bool {
  return (bool) preg_match('/^[ \r\n\t\s]$/', $char);
}

function token(string $token) {
  echo "Token: $token" . PHP_EOL;
}

function error(string $token) {
  fputs(STDERR, "Error: $token");
  exit(1);
}
